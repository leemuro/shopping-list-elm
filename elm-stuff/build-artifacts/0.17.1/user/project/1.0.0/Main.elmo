var _user$project$Main$completedStyle = function (item) {
	return item.completed ? _elm_lang$html$Html_Attributes$style(
		_elm_lang$core$Native_List.fromArray(
			[
				{ctor: '_Tuple2', _0: 'text-decoration', _1: 'line-through'}
			])) : _elm_lang$html$Html_Attributes$style(
		_elm_lang$core$Native_List.fromArray(
			[
				{ctor: '_Tuple2', _0: 'text-decoration', _1: 'none'}
			]));
};
var _user$project$Main$textStyle = _elm_lang$html$Html_Attributes$style(
	_elm_lang$core$Native_List.fromArray(
		[
			{ctor: '_Tuple2', _0: 'font-family', _1: 'Calibri, Tahoma, sans-serif'},
			{ctor: '_Tuple2', _0: 'font-size', _1: '1.1em'}
		]));
var _user$project$Main$headerStyle = _elm_lang$html$Html_Attributes$style(
	_elm_lang$core$Native_List.fromArray(
		[
			{ctor: '_Tuple2', _0: 'font-family', _1: 'Calibri, Tahoma, sans-serif'},
			{ctor: '_Tuple2', _0: 'font-size', _1: '1.3em'}
		]));
var _user$project$Main$listStyle = _elm_lang$html$Html_Attributes$style(
	_elm_lang$core$Native_List.fromArray(
		[
			{ctor: '_Tuple2', _0: 'margin', _1: '0'},
			{ctor: '_Tuple2', _0: 'padding', _1: '0'},
			{ctor: '_Tuple2', _0: 'list-style-type', _1: 'none'}
		]));
var _user$project$Main$checkboxStyle = _elm_lang$html$Html_Attributes$style(
	_elm_lang$core$Native_List.fromArray(
		[
			{ctor: '_Tuple2', _0: 'border', _1: 'solid 1px #ccc'},
			{ctor: '_Tuple2', _0: 'padding', _1: '1em'}
		]));
var _user$project$Main$itemMatches = F2(
	function (item, matchers) {
		return A2(
			_elm_lang$core$List$any,
			function (matcher) {
				return A2(_elm_lang$core$String$contains, matcher, item.desc);
			},
			matchers);
	});
var _user$project$Main$itemsInNoCategory = F2(
	function (items, categories) {
		var allMatchers = A2(
			_elm_lang$core$List$concatMap,
			function (c) {
				return c.matchers;
			},
			categories);
		return A2(
			_elm_lang$core$List$filter,
			function (item) {
				return _elm_lang$core$Basics$not(
					A2(_user$project$Main$itemMatches, item, allMatchers));
			},
			items);
	});
var _user$project$Main$itemsInCategory = F3(
	function (items, category, categories) {
		return (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$List$length(category.matchers),
			0) > 0) ? A2(
			_elm_lang$core$List$filter,
			function (item) {
				return A2(_user$project$Main$itemMatches, item, category.matchers);
			},
			items) : A2(_user$project$Main$itemsInNoCategory, items, categories);
	});
var _user$project$Main$toggleItemIfId = F2(
	function (item, id) {
		return _elm_lang$core$Native_Utils.eq(item.id, id) ? _elm_lang$core$Native_Utils.update(
			item,
			{
				completed: _elm_lang$core$Basics$not(item.completed)
			}) : item;
	});
var _user$project$Main$newItem = F2(
	function (id, desc) {
		return {id: id, desc: desc, completed: false};
	});
var _user$project$Main$textToNewItems = F2(
	function (text, currentItemId) {
		var lines = A2(
			_elm_lang$core$List$indexedMap,
			F2(
				function (v0, v1) {
					return {ctor: '_Tuple2', _0: v0, _1: v1};
				}),
			A2(_elm_lang$core$String$split, '\n', text));
		return A2(
			_elm_lang$core$List$map,
			function (line) {
				return A2(
					_user$project$Main$newItem,
					currentItemId + _elm_lang$core$Basics$fst(line),
					_elm_lang$core$Basics$snd(line));
			},
			lines);
	});
var _user$project$Main$appendTextAsNewItems = F3(
	function (items, text, currentItemId) {
		return A2(
			_elm_lang$core$List$append,
			items,
			A2(_user$project$Main$textToNewItems, text, currentItemId));
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'NewItems':
				return _elm_lang$core$Native_Utils.update(
					model,
					{newItems: _p0._0});
			case 'AddItems':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						addedItems: A3(_user$project$Main$appendTextAsNewItems, model.addedItems, model.newItems, model.currentItemId),
						currentItemId: model.currentItemId + _elm_lang$core$List$length(
							A2(_elm_lang$core$String$split, '\n', model.newItems)),
						newItems: ''
					});
			case 'ToggleItem':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						addedItems: A2(
							_elm_lang$core$List$map,
							function (i) {
								return A2(_user$project$Main$toggleItemIfId, i, _p0._0);
							},
							model.addedItems)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						addedItems: _elm_lang$core$Native_List.fromArray(
							[])
					});
		}
	});
var _user$project$Main$model = {
	newItems: '',
	addedItems: _elm_lang$core$Native_List.fromArray(
		[
			{id: 0, desc: 'potato chips', completed: false},
			{id: 1, desc: 'grapes', completed: false}
		]),
	categories: _elm_lang$core$Native_List.fromArray(
		[
			{
			name: 'Produce',
			matchers: _elm_lang$core$Native_List.fromArray(
				['banana', 'apple', 'grape', 'potato'])
		},
			{
			name: 'Meat',
			matchers: _elm_lang$core$Native_List.fromArray(
				['chicken', 'beef', 'pork', 'turkey', 'meat'])
		},
			{
			name: 'Snacks',
			matchers: _elm_lang$core$Native_List.fromArray(
				['chips', 'chocolate', 'crackers'])
		},
			{
			name: 'Other',
			matchers: _elm_lang$core$Native_List.fromArray(
				[])
		}
		]),
	currentItemId: 2
};
var _user$project$Main$ShoppingItem = F3(
	function (a, b, c) {
		return {id: a, desc: b, completed: c};
	});
var _user$project$Main$Categories = F2(
	function (a, b) {
		return {name: a, matchers: b};
	});
var _user$project$Main$ShoppingList = F4(
	function (a, b, c, d) {
		return {newItems: a, addedItems: b, categories: c, currentItemId: d};
	});
var _user$project$Main$ToggleItem = function (a) {
	return {ctor: 'ToggleItem', _0: a};
};
var _user$project$Main$listItem = function (item) {
	return A2(
		_elm_lang$html$Html$li,
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Main$textStyle,
				_user$project$Main$completedStyle(item)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$input,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$type$('checkbox'),
						_elm_lang$html$Html_Attributes$checked(item.completed),
						_elm_lang$html$Html_Events$onClick(
						_user$project$Main$ToggleItem(item.id)),
						_user$project$Main$checkboxStyle
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$html$Html$text(item.desc)
			]));
};
var _user$project$Main$listCategory = F2(
	function (categoryName, items) {
		return A2(
			_elm_lang$html$Html$li,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$h1,
					_elm_lang$core$Native_List.fromArray(
						[_user$project$Main$headerStyle]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text(categoryName)
						])),
					A2(
					_elm_lang$html$Html$ul,
					_elm_lang$core$Native_List.fromArray(
						[_user$project$Main$listStyle]),
					A2(_elm_lang$core$List$map, _user$project$Main$listItem, items))
				]));
	});
var _user$project$Main$listCategories = F2(
	function (categories, items) {
		return A2(
			_elm_lang$core$List$map,
			function (c) {
				return A2(
					_user$project$Main$listCategory,
					c.name,
					A3(_user$project$Main$itemsInCategory, items, c, categories));
			},
			categories);
	});
var _user$project$Main$Clear = {ctor: 'Clear'};
var _user$project$Main$AddItems = {ctor: 'AddItems'};
var _user$project$Main$NewItems = function (a) {
	return {ctor: 'NewItems', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$textarea,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onInput(_user$project$Main$NewItems),
						_elm_lang$html$Html_Attributes$value(model.newItems)
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Main$AddItems)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Add')
					])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Main$Clear)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Clear')
					])),
				A2(
				_elm_lang$html$Html$ul,
				_elm_lang$core$Native_List.fromArray(
					[_user$project$Main$listStyle]),
				A2(_user$project$Main$listCategories, model.categories, model.addedItems))
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$beginnerProgram(
		{model: _user$project$Main$model, view: _user$project$Main$view, update: _user$project$Main$update})
};
